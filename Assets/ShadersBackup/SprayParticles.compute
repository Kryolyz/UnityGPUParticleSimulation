#pragma kernel CSMain
#include "include/Particle.cginc"

RWStructuredBuffer<Particle> Particles;

float thickness;
float2 initialVelocity;
float2 initialPosition;
int spawnedParticlesCount;

float2 rotate90(float2 v)
{
    float2x2 rotationMatrix = float2x2(0, -1, 1, 0);
    return mul(rotationMatrix, v);
}

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{    
    float2 position = float2(100.0f, 100.0f);
    float2 velocity = float2(0, 0);
    float size = 1.0f;
    float mass = 1.0f;
    
    float temperature = 0.0f;
    
    int type = PARTICLE_TYPE_NONE;
    int collisions = 0;
    
    uint index = IndexFromXY(id.xy);
    
    if (index >= uint(spawnedParticlesCount) && index < uint(spawnedParticlesCount + thickness))
    {
        int sprayIndex = index - spawnedParticlesCount;
        float2 normalizedLineDirection = normalize(rotate90(initialVelocity));
        position = initialPosition
                - normalizedLineDirection * (float(thickness) / 2.0f) 
                + normalizedLineDirection * sprayIndex;
        velocity = initialVelocity;
        type = PARTICLE_TYPE_DIRT;
        
        
        Particles[index].newP = position;
        Particles[index].newV = velocity;
        Particles[index].size = size;
        Particles[index].mass = mass;
        Particles[index].temperature = temperature;
        Particles[index].type = type;
        Particles[index].collisions = 0;
        
    }
    else if (index > uint(spawnedParticlesCount))
    {   
        Particles[index].p = position;
        Particles[index].newP = position;
        Particles[index].newV = velocity;
        Particles[index].size = size;
        Particles[index].mass = mass;
        Particles[index].temperature = temperature;
        Particles[index].type = type;
        Particles[index].collisions = 0;
    }
    //else if (index < uint(spawnedParticlesCount))
    //{
    //    return;
    //} else
    //{
    //    position = Particles[index].newP;
    //    velocity = Particles[index].newV;
    //    type = Particles[index].type;
    //}
    
}
